services:
  zookeeper-kafka:
    image: 'public.ecr.aws/bitnami/zookeeper:latest'
    container_name: zk-kafka
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  zookeeper-kafka-target:
    image: 'public.ecr.aws/bitnami/zookeeper:latest'
    container_name: zk-kafka-target
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'public.ecr.aws/bitnami/kafka:2.8'
    ports:
      - '9092:9092'
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-kafka:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:29092,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:29092,EXTERNAL://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  kafka-target:
    image: 'public.ecr.aws/bitnami/kafka:2.8'
    ports:
      - '9093:9093'
    container_name: kafka_target
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-kafka-target:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:29092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-target:29092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  
  mirrormaker:
    build: ./mirrormaker
    container_name: mm2
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - SOURCE=kafka:29092
      - DESTINATION=kafka-target:29092
      - TOPICS=customer
      - ACLS_ENABLED=false
    volumes:
      - glue-schema-registry-plugins:/opt/plugins
    depends_on:
      - kafka
      - kafka-target

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: 'public.ecr.aws/localstack/localstack:latest'
    ports:
      - "127.0.0.1:4566:4566"
    environment:
      - SERVICES=cloudwatch, dynamodb, kinesis
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=us-east-2
      - PARITY_AWS_ACCESS_KEY_ID=1
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

volumes:
  glue-schema-registry-plugins:
    driver: local
    driver_opts:
      type: none
      device: /Users/rakssubh/Workspace/aws-gsr-subham
      o: bind

