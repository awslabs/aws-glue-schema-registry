/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

// source: /home/mrknox/workplace/knoxyGSRLibraryFork/native-schema-registry/c/src/swig/glue_schema_registry_serde.i

package GsrSerDe

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stddef.h>
#include <stdint.h>


typedef ptrdiff_t intgo;
typedef size_t uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
extern void _wrap_Swig_free_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_GsrSerDe_fa70d3d759b7424b(swig_intgo arg1);
extern uintptr_t _wrap_new_read_only_byte_array_GsrSerDe_fa70d3d759b7424b(swig_voidp arg1, swig_type_1 arg2, uintptr_t arg3);
extern void _wrap_delete_read_only_byte_array_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern swig_voidp _wrap_read_only_byte_array_get_data_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern swig_type_2 _wrap_read_only_byte_array_get_len_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern uintptr_t _wrap_new_mutable_byte_array_GsrSerDe_fa70d3d759b7424b(swig_type_3 arg1, uintptr_t arg2);
extern void _wrap_delete_mutable_byte_array_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern swig_voidp _wrap_mutable_byte_array_get_data_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern swig_type_4 _wrap_mutable_byte_array_get_max_len_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern uintptr_t _wrap_new_glue_schema_registry_schema_GsrSerDe_fa70d3d759b7424b(swig_type_5 arg1, swig_type_6 arg2, swig_type_7 arg3, swig_type_8 arg4, uintptr_t arg5);
extern void _wrap_delete_glue_schema_registry_schema_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern swig_type_9 _wrap_glue_schema_registry_schema_get_schema_name_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern swig_type_10 _wrap_glue_schema_registry_schema_get_schema_def_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern swig_type_11 _wrap_glue_schema_registry_schema_get_data_format_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern swig_type_12 _wrap_glue_schema_registry_schema_get_additional_schema_info_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern uintptr_t _wrap_new_glue_schema_registry_serializer_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern void _wrap_delete_glue_schema_registry_serializer_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern uintptr_t _wrap_glue_schema_registry_serializer_encode_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1, uintptr_t arg2, swig_type_13 arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_new_glue_schema_registry_deserializer_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern void _wrap_delete_glue_schema_registry_deserializer_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1);
extern uintptr_t _wrap_glue_schema_registry_deserializer_decode_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_glue_schema_registry_deserializer_can_decode_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_glue_schema_registry_deserializer_decode_schema_GsrSerDe_fa70d3d759b7424b(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
#undef intgo
*/
import "C"

import (
	_ "runtime/cgo"
	"sync"
	"unsafe"
)

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

func getSwigcptr(v interface{ Swigcptr() uintptr }) uintptr {
	if v == nil {
		return 0
	}
	return v.Swigcptr()
}

type _ sync.Mutex

//export cgo_panic__GsrSerDe_fa70d3d759b7424b
func cgo_panic__GsrSerDe_fa70d3d759b7424b(p *byte) {
	s := (*[1024]byte)(unsafe.Pointer(p))[:]
	for i, b := range s {
		if b == 0 {
			panic(string(s[:i]))
		}
	}
	panic(string(s))
}

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_GsrSerDe_fa70d3d759b7424b(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrRead_only_byte_array uintptr

func (p SwigcptrRead_only_byte_array) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRead_only_byte_array) SwigIsRead_only_byte_array() {
}

func NewRead_only_byte_array(arg1 *byte, arg2 int64, arg3 Glue_schema_registry_error) (_swig_ret Read_only_byte_array) {
	var swig_r Read_only_byte_array
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Read_only_byte_array)(SwigcptrRead_only_byte_array(C._wrap_new_read_only_byte_array_GsrSerDe_fa70d3d759b7424b(C.swig_voidp(_swig_i_0), C.swig_type_1(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func DeleteRead_only_byte_array(arg1 Read_only_byte_array) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_read_only_byte_array_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRead_only_byte_array) Get_data() (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	swig_r = (*byte)(C._wrap_read_only_byte_array_get_data_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRead_only_byte_array) Get_len() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_read_only_byte_array_get_len_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type Read_only_byte_array interface {
	Swigcptr() uintptr
	SwigIsRead_only_byte_array()
	Get_data() (_swig_ret *byte)
	Get_len() (_swig_ret int64)
}

type SwigcptrMutable_byte_array uintptr

func (p SwigcptrMutable_byte_array) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMutable_byte_array) SwigIsMutable_byte_array() {
}

func NewMutable_byte_array(arg1 int64, arg2 Glue_schema_registry_error) (_swig_ret Mutable_byte_array) {
	var swig_r Mutable_byte_array
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Mutable_byte_array)(SwigcptrMutable_byte_array(C._wrap_new_mutable_byte_array_GsrSerDe_fa70d3d759b7424b(C.swig_type_3(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func DeleteMutable_byte_array(arg1 Mutable_byte_array) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_mutable_byte_array_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMutable_byte_array) Get_data() (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	swig_r = (*byte)(C._wrap_mutable_byte_array_get_data_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMutable_byte_array) Get_max_len() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_mutable_byte_array_get_max_len_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type Mutable_byte_array interface {
	Swigcptr() uintptr
	SwigIsMutable_byte_array()
	Get_data() (_swig_ret *byte)
	Get_max_len() (_swig_ret int64)
}

type SwigcptrGlue_schema_registry_schema uintptr

func (p SwigcptrGlue_schema_registry_schema) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGlue_schema_registry_schema) SwigIsGlue_schema_registry_schema() {
}

func NewGlue_schema_registry_schema(arg1 string, arg2 string, arg3 string, arg4 string, arg5 Glue_schema_registry_error) (_swig_ret Glue_schema_registry_schema) {
	var swig_r Glue_schema_registry_schema
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Glue_schema_registry_schema)(SwigcptrGlue_schema_registry_schema(C._wrap_new_glue_schema_registry_schema_GsrSerDe_fa70d3d759b7424b(*(*C.swig_type_5)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_6)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_7)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_8)(unsafe.Pointer(&_swig_i_3)), C.uintptr_t(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func DeleteGlue_schema_registry_schema(arg1 Glue_schema_registry_schema) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_glue_schema_registry_schema_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrGlue_schema_registry_schema) Get_schema_name() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_glue_schema_registry_schema_get_schema_name_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrGlue_schema_registry_schema) Get_schema_def() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_glue_schema_registry_schema_get_schema_def_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrGlue_schema_registry_schema) Get_data_format() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_glue_schema_registry_schema_get_data_format_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrGlue_schema_registry_schema) Get_additional_schema_info() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_glue_schema_registry_schema_get_additional_schema_info_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

type Glue_schema_registry_schema interface {
	Swigcptr() uintptr
	SwigIsGlue_schema_registry_schema()
	Get_schema_name() (_swig_ret string)
	Get_schema_def() (_swig_ret string)
	Get_data_format() (_swig_ret string)
	Get_additional_schema_info() (_swig_ret string)
}

type SwigcptrGlue_schema_registry_serializer uintptr

func (p SwigcptrGlue_schema_registry_serializer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGlue_schema_registry_serializer) SwigIsGlue_schema_registry_serializer() {
}

func NewGlue_schema_registry_serializer(arg1 Glue_schema_registry_error) (_swig_ret Glue_schema_registry_serializer) {
	var swig_r Glue_schema_registry_serializer
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (Glue_schema_registry_serializer)(SwigcptrGlue_schema_registry_serializer(C._wrap_new_glue_schema_registry_serializer_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteGlue_schema_registry_serializer(arg1 Glue_schema_registry_serializer) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_glue_schema_registry_serializer_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrGlue_schema_registry_serializer) Encode(arg2 Read_only_byte_array, arg3 string, arg4 Glue_schema_registry_schema, arg5 Glue_schema_registry_error) (_swig_ret Mutable_byte_array) {
	var swig_r Mutable_byte_array
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Mutable_byte_array)(SwigcptrMutable_byte_array(C._wrap_glue_schema_registry_serializer_encode_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_13)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

type Glue_schema_registry_serializer interface {
	Swigcptr() uintptr
	SwigIsGlue_schema_registry_serializer()
	Encode(arg2 Read_only_byte_array, arg3 string, arg4 Glue_schema_registry_schema, arg5 Glue_schema_registry_error) (_swig_ret Mutable_byte_array)
}

type SwigcptrGlue_schema_registry_deserializer uintptr

func (p SwigcptrGlue_schema_registry_deserializer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGlue_schema_registry_deserializer) SwigIsGlue_schema_registry_deserializer() {
}

func NewGlue_schema_registry_deserializer(arg1 Glue_schema_registry_error) (_swig_ret Glue_schema_registry_deserializer) {
	var swig_r Glue_schema_registry_deserializer
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (Glue_schema_registry_deserializer)(SwigcptrGlue_schema_registry_deserializer(C._wrap_new_glue_schema_registry_deserializer_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteGlue_schema_registry_deserializer(arg1 Glue_schema_registry_deserializer) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_glue_schema_registry_deserializer_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrGlue_schema_registry_deserializer) Decode(arg2 Read_only_byte_array, arg3 Glue_schema_registry_error) (_swig_ret Mutable_byte_array) {
	var swig_r Mutable_byte_array
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Mutable_byte_array)(SwigcptrMutable_byte_array(C._wrap_glue_schema_registry_deserializer_decode_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrGlue_schema_registry_deserializer) Can_decode(arg2 Read_only_byte_array, arg3 Glue_schema_registry_error) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_glue_schema_registry_deserializer_can_decode_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrGlue_schema_registry_deserializer) Decode_schema(arg2 Read_only_byte_array, arg3 Glue_schema_registry_error) (_swig_ret Glue_schema_registry_schema) {
	var swig_r Glue_schema_registry_schema
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Glue_schema_registry_schema)(SwigcptrGlue_schema_registry_schema(C._wrap_glue_schema_registry_deserializer_decode_schema_GsrSerDe_fa70d3d759b7424b(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

type Glue_schema_registry_deserializer interface {
	Swigcptr() uintptr
	SwigIsGlue_schema_registry_deserializer()
	Decode(arg2 Read_only_byte_array, arg3 Glue_schema_registry_error) (_swig_ret Mutable_byte_array)
	Can_decode(arg2 Read_only_byte_array, arg3 Glue_schema_registry_error) (_swig_ret bool)
	Decode_schema(arg2 Read_only_byte_array, arg3 Glue_schema_registry_error) (_swig_ret Glue_schema_registry_schema)
}

type SwigcptrGlue_schema_registry_error uintptr
type Glue_schema_registry_error interface {
	Swigcptr() uintptr
}

func (p SwigcptrGlue_schema_registry_error) Swigcptr() uintptr {
	return uintptr(p)
}
