version: "3.8"

services:
  zookeeper:
    image: public.ecr.aws/bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka-1:
    image: public.ecr.aws/bitnami/kafka:3.5
    container_name: kafka-1
    depends_on: [zookeeper]
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./create-topics.sh:/create-topics.sh
    command: >
      bash -c "
        /opt/bitnami/scripts/kafka/run.sh &
        sleep 20 &&
        /create-topics.sh &&
        wait
      "

  kafka-2:
    image: public.ecr.aws/bitnami/kafka:3.5
    container_name: kafka-2
    depends_on: [zookeeper]
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - ALLOW_PLAINTEXT_LISTENER=yes

  kafka-3:
    image: public.ecr.aws/bitnami/kafka:3.5
    container_name: kafka-3
    depends_on: [zookeeper]
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - ALLOW_PLAINTEXT_LISTENER=yes

  demo-csharp-protobuf:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      - KAFKA_BROKER="kafka-1:9092,kafka-2:9092,kafka-3:9092"
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    volumes:
      - ~/.aws:/root/.aws:ro
      - .:/workplace/demos/csharp
      - ../../csharp:/workplace/csharp
    working_dir: /workplace/demos/csharp
    command: ["./run-demo.sh"]
