name: Build Golang

on:
  push:
    branches: [ master, native-schema-registry-2025, native-schema-registry-csharp, native-schema-registry-golang, native-schema-trunk ]
  pull_request:
    branches: [ master, native-schema-registry-2025, native-schema-registry-csharp, native-schema-registry-golang, native-schema-trunk ]
  release:
    branches: [ master, native-schema-registry-2025, native-schema-registry-csharp, native-schema-registry-golang, native-schema-trunk ]
    types: [ created ]
permissions:
  id-token: write
  contents: read
jobs:
  build-golang:

    continue-on-error: false
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment: AWS_AUTHED
    container:
      image: amazonlinux:2023
    services:
      zookeeper:
        image: bitnami/zookeeper:latest
        ports:
          - 2181:2181
        env:
          ALLOW_ANONYMOUS_LOGIN: yes
          
      kafka:
        image: bitnami/kafka:3.5
        ports:
          - 9092:9092
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          ALLOW_PLAINTEXT_LISTENER: yes
    steps:
      - name: Debug GitHub Context
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Event: ${{ github.event_name }}"
          echo "RoleArn: ${{ secrets.INTEGRATION_TEST_ROLE_ARN }}"
          echo "RoleToAssumeArn ${{ secrets.ROLE_ARN_TO_ASSUME }}"
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          role-to-assume: ${{ secrets.INTEGRATION_TEST_ROLE_ARN }}
          role-session-name: github-golang-build-workflow
          aws-region: us-east-1
      - name: Install required utilities
        run: |
          yum install -y zip unzip tar findutils gzip clang-tools-extra nodejs wget

      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install CMake and dependencies
        run: |
          yum install -y cmake gcc gcc-c++ git lcov pcre2-devel 
          yum groupinstall -y "Development Tools"
      - name: Set up Java
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '17.0.12'       
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Maven 3.9.11
        run: |
          curl -sSL https://downloads.apache.org/maven/maven-3/3.9.11/binaries/apache-maven-3.9.11-bin.tar.gz | tar xz
          mv apache-maven-3.9.11 /opt/maven
          echo "MAVEN_HOME=/opt/maven" >> $GITHUB_ENV
          echo "/opt/maven/bin" >> $GITHUB_PATH
    
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Java 
        shell: bash
        run: |
          mvn -U clean install -Dcheckstyle.skip=true -DskipTests
      
      - name: C Make
        shell: bash
        run: |
          cd native-schema-registry/c
          cmake -S . -Bbuild
          cd build
          cmake --build .
      - name: Test Golang
        env:
          KAFKA_BROKER: kafka:9092
        shell: bash
        run: |
          cd native-schema-registry/golang
          yum install -y golang
          go mod tidy
          # Ensure Go bin directory is in PATH
          export PATH=$PATH:$(go env GOPATH)/bin
          # Run integration tests
          cd integration-tests
          go test -v -timeout 30m ./...
