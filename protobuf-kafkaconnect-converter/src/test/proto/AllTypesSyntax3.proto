syntax = "proto3";

package com.amazonaws.services.schemaregistry.kafkaconnect.tests.syntax3;

import "additionalTypes/decimal.proto";
import "google/type/date.proto";
import "google/type/timeofday.proto";
import "google/protobuf/timestamp.proto";
import "metadata/metadata.proto";

message AllTypes {

  // Primitive types
  int32 i32 = 1;
  optional bool bool = 2;
  optional bytes bytes = 3;
  optional string str = 4;
  optional int32 i8Optional = 5 [(metadata.metadata_key) = "connect.schema", (metadata.metadata_value) = "int8"];
  optional int32 i16Optional = 6 [(metadata.metadata_key) = "connect.schema", (metadata.metadata_value) = "int16"];
  optional int64 i64Optional = 7;

  // Array types
  repeated string strArray = 8;
  repeated int32 intArray = 9;
  repeated bool boolArray = 10;
  repeated Customer customerArray = 25;
  repeated Colors colorArray = 26;

  // Time types
  google.type.Date date = 11;
  optional google.type.TimeOfDay time = 12;
  optional google.protobuf.Timestamp timestamp = 13;

  // Map types
  map<int32, int32> intMap = 14;
  map<string, bool> boolMap = 15;
  map<int32, string> strMap = 16;

  // Enum types
  enum Colors {
    BLACK = 0;
    RED = 1;
    GREEN = 2;
    BLUE = 3;
  }
  optional Colors color = 17;
  Progress progress = 18;

  // Oneof types
  oneof order {
    int32 id = 19;
    bool paid = 20;
  }

  // Nested types
  message Customer {
    string name = 1;
  }
  AddressAllTypes address = 21;
  optional Customer customer = 22;

  // Decimal
  optional additionalTypes.Decimal decimal = 23;
  optional additionalTypes.Decimal decimalWithScale = 24  [(metadata.metadata_key) = "connect.decimal.scale", (metadata.metadata_value) = "10"];

}

message AddressAllTypes {
  string street = 1;
  int32 zipcode = 2;
}

enum Progress {
  INPROGRESS = 0;
  REVIEW = 1;
  DONE = 2;
}